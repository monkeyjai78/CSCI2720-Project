{"ast":null,"code":"var _jsxFileName = \"/home/s1155127099/project/fe/src/pages/Home/index.jsx\";\n\n/* eslint-disable no-sequences */\nimport React, { useEffect, useState } from \"react\";\nimport Map from \"../../component/Map\";\nimport { StandaloneSearchBox } from \"react-google-maps/lib/components/places/StandaloneSearchBox\";\nimport './style.css';\nimport { _getJson, _getPidsList, _getPinfosList, _saveJson, _saveReviewsJson, _getPlacesLists } from \"./../../util/req.js\"; // const API_KEY = \"AIzaSyCvHcIZbtF80KUW23vCV_kmmr2EVixerAI\";\n\nexport const API_KEY = \"AIzaSyAiDq7ONa1fA5PGU5qTJPbfAeXwCCdjDbQ\";\n\nconst pick = (obj, arr) => arr.reduce((acc, curr) => (curr in obj && (acc[curr] = obj[curr]), acc), {});\n\nexport default function Index() {\n  const refs = {};\n  const [places, setPlaces] = useState([]);\n  const [placeJson, setPlaceJson] = useState([]);\n  const [center, setCenter] = useState({\n    lat: 22.320048,\n    lng: 114.173355\n  });\n  const [UpdateTime, setUpdateTime] = useState({});\n\n  const getPlaceList = async placeJson => {\n    var nameList = placeJson;\n    var reqList = nameList.map(async (it, index) => await _getPidsList(`/queryautocomplete/json?&key=${API_KEY}&input=${it.hospName}`));\n    var data = await Promise.all(reqList);\n    var finalDataList = data.map(it => it.predictions[0].place_id).map(async (it, index) => await _getPinfosList(`/details/json?&key=${API_KEY}&placeid=${it}`));\n    var dataList = await Promise.all(finalDataList);\n    var finalData = dataList.map((it, index) => ({ ...it.result,\n      wait: nameList[index]\n    }));\n    var saveJson = finalData.map(it => pick(it, [\"name\", \"formatted_address\", \"formatted_phone_number\", \"icon\", \"geometry\", \"opening_hours\", \"place_id\", \"rating\", \"user_ratings_total\", \"wait\", \"website\"]));\n    var reviewsJson = finalData.map(it => pick(it, [\"reviews\", \"place_id\"]));\n    console.log(\"finalData -> :\", finalData);\n    await _saveJson({\n      data: JSON.stringify(saveJson)\n    });\n    await _saveReviewsJson({\n      data: JSON.stringify(reviewsJson)\n    });\n    setPlaceJson(finalData);\n  };\n\n  useEffect(() => {\n    const getJson = async () => {\n      // var res = await _getJson();\n      // getPlaceList(res.data);\n      var res = await _getPlacesLists();\n      setPlaceJson(res.data);\n      var boo = await _getJson();\n      setUpdateTime(boo);\n    };\n\n    getJson();\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"home-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"search-container\",\n    style: {\n      textAlign: \"center\",\n      width: \"420px\",\n      margin: \"0 auto\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(StandaloneSearchBox, {\n    ref: res => {\n      refs.searchBox = res;\n    },\n    onPlacesChanged: () => {\n      const places = refs.searchBox.getPlaces();\n      console.log(\"places -> :\", places); // setPlaces([...places]);\n\n      console.log(\"la\", {\n        lat: Number(places[0].geometry.location.lat()),\n        lng: Number(places[0].geometry.location.lng())\n      });\n      setCenter({\n        lat: Number(places[0].geometry.location.lat()),\n        lng: Number(places[0].geometry.location.lng())\n      });\n      setPlaceJson([...places]);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Input Hospital Name\",\n    style: {\n      boxSizing: `border-box`,\n      border: `1px solid transparent`,\n      width: `100%`,\n      height: `32px`,\n      padding: `0 12px`,\n      borderRadius: `3px`,\n      boxShadow: `0 2px 6px rgba(0, 0, 0, 0.3)`,\n      fontSize: `14px`,\n      outline: `none`,\n      textOverflow: `ellipses`\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 9\n    }\n  }, places.map(({\n    place_id,\n    formatted_address,\n    geometry: {\n      location\n    }\n  }) => /*#__PURE__*/React.createElement(\"li\", {\n    key: place_id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 15\n    }\n  }, formatted_address, \" at \", \"(\", location.lat(), \", \", location.lng(), \")\")))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"map-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Map, {\n    loadingElement: /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        height: `100%`\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 25\n      }\n    }),\n    containerElement: /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        height: `550px`\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 27\n      }\n    }),\n    mapElement: /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        height: `100%`\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 21\n      }\n    }),\n    initMapkers: placeJson,\n    center: center,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 9\n    }\n  }, \"Last Update Time: \")));\n}","map":{"version":3,"sources":["/home/s1155127099/project/fe/src/pages/Home/index.jsx"],"names":["React","useEffect","useState","Map","StandaloneSearchBox","_getJson","_getPidsList","_getPinfosList","_saveJson","_saveReviewsJson","_getPlacesLists","API_KEY","pick","obj","arr","reduce","acc","curr","Index","refs","places","setPlaces","placeJson","setPlaceJson","center","setCenter","lat","lng","UpdateTime","setUpdateTime","getPlaceList","nameList","reqList","map","it","index","hospName","data","Promise","all","finalDataList","predictions","place_id","dataList","finalData","result","wait","saveJson","reviewsJson","console","log","JSON","stringify","getJson","res","boo","textAlign","width","margin","searchBox","getPlaces","Number","geometry","location","boxSizing","border","height","padding","borderRadius","boxShadow","fontSize","outline","textOverflow","formatted_address"],"mappings":"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","sourcesContent":["/* eslint-disable no-sequences */\r\nimport React, { useEffect, useState } from \"react\";\r\nimport Map from \"../../component/Map\";\r\nimport { StandaloneSearchBox } from \"react-google-maps/lib/components/places/StandaloneSearchBox\";\r\nimport './style.css';\r\n\r\nimport {\r\n  _getJson,\r\n  _getPidsList,\r\n  _getPinfosList,\r\n  _saveJson,\r\n  _saveReviewsJson,\r\n  _getPlacesLists,\r\n} from \"./../../util/req.js\";\r\n\r\n// const API_KEY = \"AIzaSyCvHcIZbtF80KUW23vCV_kmmr2EVixerAI\";\r\nexport const API_KEY = \"AIzaSyAiDq7ONa1fA5PGU5qTJPbfAeXwCCdjDbQ\";\r\n\r\nconst pick = (obj, arr) =>\r\n  arr.reduce((acc, curr) => (curr in obj && (acc[curr] = obj[curr]), acc), {});\r\n\r\nexport default function Index() {\r\n  const refs = {};\r\n  const [places, setPlaces] = useState([]);\r\n\r\n  const [placeJson, setPlaceJson] = useState([]);\r\n  const [center, setCenter] = useState({\r\n    lat: 22.320048,\r\n    lng: 114.173355,\r\n  });\r\n  const [UpdateTime, setUpdateTime] = useState({});\r\n  const getPlaceList = async (placeJson) => {\r\n    var nameList = placeJson;\r\n\r\n    var reqList = nameList.map(\r\n      async (it, index) =>\r\n        await _getPidsList(\r\n          `/queryautocomplete/json?&key=${API_KEY}&input=${it.hospName}`\r\n        )\r\n    );\r\n\r\n    var data = await Promise.all(reqList);\r\n    var finalDataList = data\r\n      .map((it) => it.predictions[0].place_id)\r\n      .map(\r\n        async (it, index) =>\r\n          await _getPinfosList(`/details/json?&key=${API_KEY}&placeid=${it}`)\r\n      );\r\n\r\n    var dataList = await Promise.all(finalDataList);\r\n\r\n    var finalData = dataList.map((it, index) => ({\r\n      ...it.result,\r\n      wait: nameList[index],\r\n    }));\r\n\r\n    var saveJson = finalData.map((it) =>\r\n      pick(it, [\r\n        \"name\",\r\n        \"formatted_address\",\r\n        \"formatted_phone_number\",\r\n        \"icon\",\r\n        \"geometry\",\r\n        \"opening_hours\",\r\n        \"place_id\",\r\n        \"rating\",\r\n        \"user_ratings_total\",\r\n        \"wait\",\r\n        \"website\",\r\n      ])\r\n    );\r\n    var reviewsJson = finalData.map((it) => pick(it, [\"reviews\", \"place_id\"]));\r\n    console.log(\"finalData -> :\", finalData);\r\n\r\n    await _saveJson({ data: JSON.stringify(saveJson) });\r\n    await _saveReviewsJson({ data: JSON.stringify(reviewsJson) });\r\n    setPlaceJson(finalData);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const getJson = async () => {\r\n      // var res = await _getJson();\r\n      // getPlaceList(res.data);\r\n      var res = await _getPlacesLists();\r\n      setPlaceJson(res.data);\r\n      var boo = await _getJson();\r\n      setUpdateTime(boo);\r\n    };\r\n    getJson();\r\n    \r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"home-container\">\r\n      <div className=\"search-container\" style={{ textAlign: \"center\", width: \"420px\", margin: \"0 auto\" }}>\r\n        <StandaloneSearchBox\r\n          ref={(res) => {\r\n            refs.searchBox = res;\r\n          }}\r\n          onPlacesChanged={() => {\r\n            const places = refs.searchBox.getPlaces();\r\n            console.log(\"places -> :\", places);\r\n            // setPlaces([...places]);\r\n            console.log(\"la\", {\r\n              lat: Number(places[0].geometry.location.lat()),\r\n              lng: Number(places[0].geometry.location.lng()),\r\n            });\r\n\r\n            setCenter({\r\n              lat: Number(places[0].geometry.location.lat()),\r\n              lng: Number(places[0].geometry.location.lng()),\r\n            });\r\n            setPlaceJson([...places]);\r\n          }}\r\n        >\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Input Hospital Name\"\r\n            style={{\r\n              boxSizing: `border-box`,\r\n              border: `1px solid transparent`,\r\n              width: `100%`,\r\n              height: `32px`,\r\n              padding: `0 12px`,\r\n              borderRadius: `3px`,\r\n              boxShadow: `0 2px 6px rgba(0, 0, 0, 0.3)`,\r\n              fontSize: `14px`,\r\n              outline: `none`,\r\n              textOverflow: `ellipses`,\r\n            }}\r\n          />\r\n        </StandaloneSearchBox>\r\n        <ul>\r\n          {places.map(\r\n            ({ place_id, formatted_address, geometry: { location } }) => (\r\n              <li key={place_id}>\r\n                {formatted_address}\r\n                {\" at \"}({location.lat()}, {location.lng()})\r\n              </li>\r\n            )\r\n          )}\r\n        </ul>\r\n      </div>\r\n\r\n      <div className=\"map-container\">\r\n      <Map\r\n        loadingElement={<div style={{ height: `100%` }} />}\r\n        containerElement={<div style={{ height: `550px` }} />}\r\n        mapElement={<div style={{ height: `100%` }} />}\r\n        initMapkers={placeJson}\r\n        center={center}\r\n      />\r\n      </div>\r\n      <div>\r\n        <p>Last Update Time: </p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}