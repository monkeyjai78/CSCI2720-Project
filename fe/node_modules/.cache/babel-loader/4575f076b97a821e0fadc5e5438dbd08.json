{"ast":null,"code":"var _jsxFileName = \"/home/s1155127099/project/fe/src/component/AddModal/index.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { _getUserList, _delUser, _reg, _update } from \"../../util/req\";\nimport Button from '../button';\nimport ModalWithTitle from '../ModalWithTitle';\nimport \"./style.css\";\nimport clsx from \"clsx\";\nexport default function AddModal(props) {\n  const gelist = async () => {\n    var res = await _getUserList();\n    setList(res.data);\n  };\n\n  const [list, setList] = useState([]);\n  const [infoForm, setInfoForm] = useState({\n    username: \"\",\n    password: \"\"\n  });\n\n  const save = async () => {\n    if (infoForm.username.length >= 4 && infoForm.password.length >= 4 && infoForm.username.length <= 20 && infoForm.password.length <= 20) {\n      if (infoForm._id) {\n        await _update(infoForm);\n      } else {\n        await _reg(infoForm);\n      }\n\n      alert(\"ok\");\n      gelist();\n      setInfoForm({\n        username: \"\",\n        password: \"\"\n      });\n    } else {\n      alert(\"Username and password should between 4 and 20 characters\");\n    }\n  };\n\n  const update = async it => {\n    setInfoForm({ ...it\n    });\n  };\n\n  useEffect(() => {\n    gelist();\n  }, []); //const { up = false ,className} = props;\n\n  return /*#__PURE__*/React.createElement(ModalWithTitle, {\n    englishTitle: false ? \"Update User\" : \"Add New User\",\n    onClick: props.onClickClose,\n    backgroundColor: \"#1F6332\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"addmodal-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"addmodal-title-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"addmodal-english-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }\n  }, \"User Name:\", \" \")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"addmodal-input-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    className: \"addmodal-input\",\n    type: \"text\",\n    value: infoForm.username\n    /*onChange={(e) => {\n    \tsetInfoForm({ ...infoForm, username: e.target.value }); \n    }}*/\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 5\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"addmodal-title-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"addmodal-english-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 5\n    }\n  }, \"Password:\", \" \")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"addmodal-input-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    className: \"addmodal-input\",\n    type: \"text\",\n    value: infoForm.password\n    /*onChange={(e) => {\n      setInfoForm({ ...infoForm, password: e.target.value });\n    }}*/\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 5\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"addmodal-button-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"addmodal-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    chineseLabel: \"\\u78BA\\u8A8D\",\n    englishLabel: \"Confirm\",\n    onClick: (save, props.onClickClose),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 6\n    }\n  }, infoForm._id ? \"Save\" : \"Create\")))));\n}","map":{"version":3,"sources":["/home/s1155127099/project/fe/src/component/AddModal/index.js"],"names":["React","useEffect","useState","_getUserList","_delUser","_reg","_update","Button","ModalWithTitle","clsx","AddModal","props","gelist","res","setList","data","list","infoForm","setInfoForm","username","password","save","length","_id","alert","update","it","onClickClose"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { _getUserList, _delUser, _reg, _update } from \"../../util/req\";\nimport Button from '../button'\nimport ModalWithTitle from '../ModalWithTitle'\nimport \"./style.css\"\nimport clsx from \"clsx\"\n\nexport default function AddModal(props)  {\n\tconst gelist = async () => {\n    var res = await _getUserList();\n    setList(res.data);\n\t};\n\tconst [list, setList] = useState([]);\n\tconst [infoForm, setInfoForm] = useState({\n    username: \"\",\n    password: \"\",\n  });\n\n\tconst save = async () => {\n\t\tif(infoForm.username.length>=4 && infoForm.password.length>=4 && infoForm.username.length<=20 && infoForm.password.length<=20) {\n\t\n\t\t\tif (infoForm._id) {\n\t\t\t\tawait _update(infoForm);\n\t\t\t} else {\n\t\t\t\tawait _reg(infoForm);\n\t\t\t}\n\t\n\t\t\talert(\"ok\");\n\t\t\tgelist();\n\t\t\tsetInfoForm({ username: \"\", password: \"\" });\n\t }else {\n\t\t alert(\"Username and password should between 4 and 20 characters\");\n\t}};\n\n\tconst update = async (it) => {\n    setInfoForm({ ...it });\n  };\n\n\tuseEffect(() => {\n    gelist();\n  }, []);\n\n\t//const { up = false ,className} = props;\n\n  return(\n    <ModalWithTitle englishTitle={false ? \"Update User\": \"Add New User\"} onClick={props.onClickClose} backgroundColor=\"#1F6332\">\n\t\t<div className=\"addmodal-container\">\n\t\t\t<div className=\"addmodal-title-container\">\n\t\t\t\t<span className=\"addmodal-english-title\">\n\t\t\t\t\tUser Name:{\" \"}\n\t\t\t\t</span>\n\t\t\t</div>\n\t\t\t<div className=\"addmodal-input-container\">\n\t\t\t\t<input className=\"addmodal-input\"\n\t\t\t\t\ttype=\"text\" \n\t\t\t\t\tvalue={infoForm.username}\n\t\t\t\t\t/*onChange={(e) => {\n\t\t\t\t\t\tsetInfoForm({ ...infoForm, username: e.target.value }); \n\t\t\t\t\t}}*/\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t<div className=\"addmodal-title-container\">\n\t\t\t\t<span className=\"addmodal-english-title\">\n\t\t\t\t\tPassword:{\" \"}\n\t\t\t\t</span>\n\t\t\t</div>\n      <div className=\"addmodal-input-container\">\n\t\t\t\t<input className=\"addmodal-input\" \n\t\t\t\t\t\ttype=\"text\" \n            value={infoForm.password}\n            /*onChange={(e) => {\n              setInfoForm({ ...infoForm, password: e.target.value });\n\t\t\t\t\t}}*/\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t<div className=\"addmodal-button-container\">\n\t\t\t\t<div className=\"addmodal-button\">\n\t\t\t\t\t<Button chineseLabel=\"確認\" englishLabel=\"Confirm\" onClick={save,props.onClickClose} >\n\t\t\t\t\t\t{infoForm._id ? \"Save\" : \"Create\"}\n\t\t\t\t\t</Button>\n\t\t\t\t</div>\n      </div>\n\t\t</div>\t\n  \t</ModalWithTitle>\n  )\n\n}\n"]},"metadata":{},"sourceType":"module"}