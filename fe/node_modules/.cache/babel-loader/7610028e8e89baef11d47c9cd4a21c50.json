{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\express-full-4-26\\\\express-full-4-26\\\\fe\\\\src\\\\pages\\\\Place\\\\index.jsx\";\nimport React, { useEffect, useState } from \"react\";\nimport { _saveJson, _saveReviewsJson, _getPlacesLists, _delPlace } from \"../../util/req\";\nexport default function Index() {\n  const [list, setList] = useState([]);\n  const [infoForm, setInfoForm] = useState({\n    username: \"\",\n    password: \"\"\n  });\n\n  const gelist = async () => {\n    var res = await _getPlacesLists();\n    setList(res.data);\n  };\n\n  const del = async id => {\n    await _delPlace(id);\n    alert(\"ok\");\n    gelist();\n  };\n\n  const save = async () => {\n    if (infoForm._id) {// await _update(infoForm);\n    } else {// await _reg(infoForm);\n      }\n\n    alert(\"ok\");\n    gelist();\n    setInfoForm({\n      username: \"\",\n      password: \"\"\n    });\n  };\n\n  const update = async it => {\n    setInfoForm({ ...it\n    });\n  };\n\n  const created = async it => {\n    await _saveJson();\n    await _saveReviewsJson();\n    alert('ok');\n  };\n\n  useEffect(() => {\n    gelist();\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"info-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    onClick: created,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }, \"refesh data for API\")), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }, \"username:\", \" \", /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: infoForm.username,\n    onChange: e => {\n      setInfoForm({ ...infoForm,\n        username: e.target.value\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }, \"password:\", \" \", /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: infoForm.password,\n    onChange: e => {\n      setInfoForm({ ...infoForm,\n        password: e.target.value\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    onClick: save,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 11\n    }\n  }, infoForm._id ? \"Save\" : \"Create\"))), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"table\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }\n  }, \"userName\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }\n  }, \"password\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }\n  }, \"action\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }\n  }, list.map((it, index) => /*#__PURE__*/React.createElement(\"tr\", {\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 15\n    }\n  }, it.username), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 15\n    }\n  }, it.password), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => update(it),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 17\n    }\n  }, \"Update\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => del(it._id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 17\n    }\n  }, \"Del\")))))));\n}","map":{"version":3,"sources":["C:/Users/User/Desktop/express-full-4-26/express-full-4-26/fe/src/pages/Place/index.jsx"],"names":["React","useEffect","useState","_saveJson","_saveReviewsJson","_getPlacesLists","_delPlace","Index","list","setList","infoForm","setInfoForm","username","password","gelist","res","data","del","id","alert","save","_id","update","it","created","e","target","value","map","index"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  _saveJson,\r\n  _saveReviewsJson,\r\n  _getPlacesLists,\r\n  _delPlace,\r\n} from \"../../util/req\";\r\n\r\nexport default function Index() {\r\n  const [list, setList] = useState([]);\r\n  const [infoForm, setInfoForm] = useState({\r\n    username: \"\",\r\n    password: \"\",\r\n  });\r\n\r\n  const gelist = async () => {\r\n    var res = await _getPlacesLists();\r\n    setList(res.data);\r\n  };\r\n  const del = async (id) => {\r\n    await _delPlace(id);\r\n    alert(\"ok\");\r\n    gelist();\r\n  };\r\n  const save = async () => {\r\n    if (infoForm._id) {\r\n      // await _update(infoForm);\r\n    } else {\r\n      // await _reg(infoForm);\r\n    }\r\n    alert(\"ok\");\r\n    gelist();\r\n    setInfoForm({ username: \"\", password: \"\" });\r\n  };\r\n  const update = async (it) => {\r\n    setInfoForm({ ...it });\r\n  };\r\n  const created = async (it) => {\r\n    await _saveJson()\r\n    await _saveReviewsJson()\r\n    alert('ok')\r\n  };\r\n\r\n  useEffect(() => {\r\n    gelist();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"info-center\">\r\n      <br />\r\n      <br />\r\n      <p>\r\n        <button type=\"button\" onClick={created}>\r\n          refesh data for API\r\n        </button>\r\n      </p>\r\n      <br />\r\n      <br />\r\n      <form>\r\n        <p>\r\n          username:{\" \"}\r\n          <input\r\n            type=\"text\"\r\n            value={infoForm.username}\r\n            onChange={(e) => {\r\n              setInfoForm({ ...infoForm, username: e.target.value });\r\n            }}\r\n          />\r\n        </p>\r\n        <p>\r\n          password:{\" \"}\r\n          <input\r\n            type=\"text\"\r\n            value={infoForm.password}\r\n            onChange={(e) => {\r\n              setInfoForm({ ...infoForm, password: e.target.value });\r\n            }}\r\n          />\r\n        </p>\r\n        <p>\r\n          <button type=\"button\" onClick={save}>\r\n            {infoForm._id ? \"Save\" : \"Create\"}\r\n          </button>\r\n        </p>\r\n      </form>\r\n\r\n      <br />\r\n      <br />\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th>userName</th>\r\n            <th>password</th>\r\n            <th>action</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {list.map((it, index) => (\r\n            <tr key={index}>\r\n              <td>{it.username}</td>\r\n              <td>{it.password}</td>\r\n              <td>\r\n                <button onClick={() => update(it)}>Update</button>\r\n                <button onClick={() => del(it._id)}>Del</button>\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}