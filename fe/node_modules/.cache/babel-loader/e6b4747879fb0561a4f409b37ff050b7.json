{"ast":null,"code":"import axios from 'axios';\nimport QS from 'qs';\naxios.defaults.timeout = 10000;\naxios.interceptors.request.use(config => {\n  return config;\n});\naxios.interceptors.response.use(response => {\n  return response;\n}, error => {\n  return Promise.reject(error);\n});\nexport function get(url, params) {\n  return new Promise((resolve, reject) => {\n    axios.get(url, {\n      params: params\n    }).then(res => {\n      resolve(res.data);\n    }).catch(err => {\n      reject(err);\n    });\n  });\n}\nexport function post(url, params) {\n  return new Promise((resolve, reject) => {\n    console.log('params -> :', params);\n    axios.post(url, QS.stringify(params)).then(res => {\n      resolve(res.data);\n    }).catch(err => {\n      reject(err);\n    });\n  });\n}\nexport function patch(url, data = {}) {\n  return new Promise((resolve, reject) => {\n    axios.patch(url, data).then(response => {\n      resolve(response.data);\n    }, err => {\n      reject(err);\n    });\n  });\n}\nexport function put(url, data = {}) {\n  return new Promise((resolve, reject) => {\n    axios.put(url, data).then(response => {\n      resolve(response.data);\n    }, err => {\n      reject(err);\n    });\n  });\n}\nexport function del(url, data = {}) {\n  return new Promise((resolve, reject) => {\n    axios.delete(url, data).then(response => {\n      resolve(response.data);\n    }, err => {\n      reject(err);\n    });\n  });\n}","map":{"version":3,"sources":["E:/codes/waibao/2021/4-25/express-full-4-25/fe/src/util/axios-c.js"],"names":["axios","QS","defaults","timeout","interceptors","request","use","config","response","error","Promise","reject","get","url","params","resolve","then","res","data","catch","err","post","console","log","stringify","patch","put","del","delete"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,EAAP,MAAe,IAAf;AAEAD,KAAK,CAACE,QAAN,CAAeC,OAAf,GAAyB,KAAzB;AAEAH,KAAK,CAACI,YAAN,CAAmBC,OAAnB,CAA2BC,GAA3B,CAA+BC,MAAM,IAAI;AACrC,SAAOA,MAAP;AACH,CAFD;AAIAP,KAAK,CAACI,YAAN,CAAmBI,QAAnB,CAA4BF,GAA5B,CACIE,QAAQ,IAAI;AACR,SAAOA,QAAP;AACH,CAHL,EAIIC,KAAK,IAAI;AACL,SAAOC,OAAO,CAACC,MAAR,CAAeF,KAAf,CAAP;AACH,CANL;AASA,OAAO,SAASG,GAAT,CAAcC,GAAd,EAAmBC,MAAnB,EAA2B;AAC9B,SAAO,IAAIJ,OAAJ,CAAY,CAACK,OAAD,EAAUJ,MAAV,KAAqB;AACpCX,IAAAA,KAAK,CAACY,GAAN,CAAUC,GAAV,EAAe;AACXC,MAAAA,MAAM,EAAEA;AADG,KAAf,EAEGE,IAFH,CAEQC,GAAG,IAAI;AACXF,MAAAA,OAAO,CAACE,GAAG,CAACC,IAAL,CAAP;AACH,KAJD,EAIGC,KAJH,CAISC,GAAG,IAAI;AACZT,MAAAA,MAAM,CAACS,GAAD,CAAN;AACH,KAND;AAOH,GARM,CAAP;AASH;AAED,OAAO,SAASC,IAAT,CAAeR,GAAf,EAAoBC,MAApB,EAA4B;AAC/B,SAAO,IAAIJ,OAAJ,CAAY,CAACK,OAAD,EAAUJ,MAAV,KAAqB;AACpCW,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BT,MAA3B;AACAd,IAAAA,KAAK,CAACqB,IAAN,CAAWR,GAAX,EAAgBZ,EAAE,CAACuB,SAAH,CAAaV,MAAb,CAAhB,EACKE,IADL,CACUC,GAAG,IAAI;AACTF,MAAAA,OAAO,CAACE,GAAG,CAACC,IAAL,CAAP;AACH,KAHL,EAIKC,KAJL,CAIWC,GAAG,IAAI;AACVT,MAAAA,MAAM,CAACS,GAAD,CAAN;AACH,KANL;AAOH,GATM,CAAP;AAUH;AAID,OAAO,SAASK,KAAT,CAAgBZ,GAAhB,EAAqBK,IAAI,GAAG,EAA5B,EAAgC;AACnC,SAAO,IAAIR,OAAJ,CAAY,CAACK,OAAD,EAAUJ,MAAV,KAAqB;AACpCX,IAAAA,KAAK,CAACyB,KAAN,CAAYZ,GAAZ,EAAiBK,IAAjB,EAAuBF,IAAvB,CAA4BR,QAAQ,IAAI;AACpCO,MAAAA,OAAO,CAACP,QAAQ,CAACU,IAAV,CAAP;AACH,KAFD,EAEGE,GAAG,IAAI;AACNT,MAAAA,MAAM,CAACS,GAAD,CAAN;AACH,KAJD;AAKH,GANM,CAAP;AAOH;AAED,OAAO,SAASM,GAAT,CAAcb,GAAd,EAAmBK,IAAI,GAAG,EAA1B,EAA8B;AACjC,SAAO,IAAIR,OAAJ,CAAY,CAACK,OAAD,EAAUJ,MAAV,KAAqB;AACpCX,IAAAA,KAAK,CAAC0B,GAAN,CAAUb,GAAV,EAAeK,IAAf,EAAqBF,IAArB,CAA0BR,QAAQ,IAAI;AAClCO,MAAAA,OAAO,CAACP,QAAQ,CAACU,IAAV,CAAP;AACH,KAFD,EAEGE,GAAG,IAAI;AACNT,MAAAA,MAAM,CAACS,GAAD,CAAN;AACH,KAJD;AAKH,GANM,CAAP;AAOH;AACD,OAAO,SAASO,GAAT,CAAcd,GAAd,EAAmBK,IAAI,GAAG,EAA1B,EAA8B;AACjC,SAAO,IAAIR,OAAJ,CAAY,CAACK,OAAD,EAAUJ,MAAV,KAAqB;AACpCX,IAAAA,KAAK,CAAC4B,MAAN,CAAaf,GAAb,EAAkBK,IAAlB,EAAwBF,IAAxB,CAA6BR,QAAQ,IAAI;AACrCO,MAAAA,OAAO,CAACP,QAAQ,CAACU,IAAV,CAAP;AACH,KAFD,EAEGE,GAAG,IAAI;AACNT,MAAAA,MAAM,CAACS,GAAD,CAAN;AACH,KAJD;AAKH,GANM,CAAP;AAOH","sourcesContent":["import axios from 'axios';\r\nimport QS from 'qs';\r\n\r\naxios.defaults.timeout = 10000\r\n\r\naxios.interceptors.request.use(config => {\r\n    return config;\r\n});\r\n\r\naxios.interceptors.response.use(\r\n    response => {\r\n        return response;\r\n    },\r\n    error => {\r\n        return Promise.reject(error);\r\n    }\r\n);\r\n\r\nexport function get (url, params) {\r\n    return new Promise((resolve, reject) => {\r\n        axios.get(url, {\r\n            params: params\r\n        }).then(res => {\r\n            resolve(res.data);\r\n        }).catch(err => {\r\n            reject(err)\r\n        })\r\n    });\r\n}\r\n\r\nexport function post (url, params) {\r\n    return new Promise((resolve, reject) => {\r\n        console.log('params -> :', params)\r\n        axios.post(url, QS.stringify(params))\r\n            .then(res => {\r\n                resolve(res.data);\r\n            })\r\n            .catch(err => {\r\n                reject(err)\r\n            })\r\n    });\r\n}\r\n\r\n\r\n\r\nexport function patch (url, data = {}) {\r\n    return new Promise((resolve, reject) => {\r\n        axios.patch(url, data).then(response => {\r\n            resolve(response.data);\r\n        }, err => {\r\n            reject(err)\r\n        })\r\n    })\r\n}\r\n\r\nexport function put (url, data = {}) {\r\n    return new Promise((resolve, reject) => {\r\n        axios.put(url, data).then(response => {\r\n            resolve(response.data);\r\n        }, err => {\r\n            reject(err);\r\n        })\r\n    })\r\n}\r\nexport function del (url, data = {}) {\r\n    return new Promise((resolve, reject) => {\r\n        axios.delete(url, data).then(response => {\r\n            resolve(response.data);\r\n        }, err => {\r\n            reject(err);\r\n        })\r\n    })\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}