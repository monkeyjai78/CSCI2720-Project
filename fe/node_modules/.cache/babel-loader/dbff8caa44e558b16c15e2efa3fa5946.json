{"ast":null,"code":"var _jsxFileName = \"/home/s1155127099/project/fe/src/pages/User/index.jsx\";\nimport React, { useEffect, useState } from \"react\";\nimport { _getUserList, _delUser, _reg, _update } from \"../../util/req\";\nexport default function Index() {\n  const [list, setList] = useState([]);\n  const [infoForm, setInfoForm] = useState({\n    username: \"\",\n    password: \"\"\n  });\n\n  const gelist = async () => {\n    var res = await _getUserList();\n    setList(res.data);\n  };\n\n  const del = async id => {\n    await _delUser(id);\n    alert(\"OK Deleted\");\n    gelist();\n  };\n\n  const save = async () => {\n    if (infoForm.username.length >= 4 && infoForm.password.length >= 4 && infoForm.username.length <= 20 && infoForm.password.length <= 20) {\n      if (infoForm._id) {\n        await _update(infoForm);\n      } else {\n        await _reg(infoForm);\n      }\n\n      alert(\"OK Saved/Created\", res.data);\n      gelist();\n      setInfoForm({\n        username: \"\",\n        password: \"\"\n      });\n    } else {\n      alert(\"The username and password should have 4-20 characters.\");\n    }\n  };\n\n  const update = async it => {\n    setInfoForm({ ...it\n    });\n  };\n\n  useEffect(() => {\n    gelist();\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"info-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, \"username:\", \" \", /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: infoForm.username,\n    onChange: e => {\n      setInfoForm({ ...infoForm,\n        username: e.target.value\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }, \"password:\", \" \", /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: infoForm.password,\n    onChange: e => {\n      setInfoForm({ ...infoForm,\n        password: e.target.value\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    onClick: save,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 11\n    }\n  }, infoForm._id ? \"Save\" : \"Create\"))), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"table\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }\n  }, \"userName\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }\n  }, \"password\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }\n  }, \"action\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }\n  }, list.map((it, index) => /*#__PURE__*/React.createElement(\"tr\", {\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 15\n    }\n  }, it.username), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 15\n    }\n  }, it.password), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => update(it),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 17\n    }\n  }, \"Update\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => del(it._id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 17\n    }\n  }, \"Del\")))))));\n}","map":{"version":3,"sources":["/home/s1155127099/project/fe/src/pages/User/index.jsx"],"names":["React","useEffect","useState","_getUserList","_delUser","_reg","_update","Index","list","setList","infoForm","setInfoForm","username","password","gelist","res","data","del","id","alert","save","length","_id","update","it","e","target","value","map","index"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,YAAT,EAAuBC,QAAvB,EAAiCC,IAAjC,EAAuCC,OAAvC,QAAsD,gBAAtD;AAEA,eAAe,SAASC,KAAT,GAAiB;AAC9B,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACQ,QAAD,EAAWC,WAAX,IAA0BT,QAAQ,CAAC;AACvCU,IAAAA,QAAQ,EAAE,EAD6B;AAEvCC,IAAAA,QAAQ,EAAE;AAF6B,GAAD,CAAxC;;AAKA,QAAMC,MAAM,GAAG,YAAY;AACzB,QAAIC,GAAG,GAAG,MAAMZ,YAAY,EAA5B;AACAM,IAAAA,OAAO,CAACM,GAAG,CAACC,IAAL,CAAP;AACD,GAHD;;AAIA,QAAMC,GAAG,GAAG,MAAOC,EAAP,IAAc;AACxB,UAAMd,QAAQ,CAACc,EAAD,CAAd;AACAC,IAAAA,KAAK,CAAC,YAAD,CAAL;AACAL,IAAAA,MAAM;AACP,GAJD;;AAKA,QAAMM,IAAI,GAAG,YAAY;AACvB,QAAIV,QAAQ,CAACE,QAAT,CAAkBS,MAAlB,IAA0B,CAA1B,IAA+BX,QAAQ,CAACG,QAAT,CAAkBQ,MAAlB,IAA0B,CAAzD,IAA8DX,QAAQ,CAACE,QAAT,CAAkBS,MAAlB,IAA2B,EAAzF,IAA+FX,QAAQ,CAACG,QAAT,CAAkBQ,MAAlB,IAA2B,EAA9H,EAAkI;AAChI,UAAIX,QAAQ,CAACY,GAAb,EAAkB;AAChB,cAAMhB,OAAO,CAACI,QAAD,CAAb;AACD,OAFD,MAEO;AACL,cAAML,IAAI,CAACK,QAAD,CAAV;AACD;;AACDS,MAAAA,KAAK,CAAC,kBAAD,EAAqBJ,GAAG,CAACC,IAAzB,CAAL;AACAF,MAAAA,MAAM;AACNH,MAAAA,WAAW,CAAC;AAAEC,QAAAA,QAAQ,EAAE,EAAZ;AAAgBC,QAAAA,QAAQ,EAAE;AAA1B,OAAD,CAAX;AACD,KATD,MASO;AACLM,MAAAA,KAAK,CAAC,wDAAD,CAAL;AACD;AAEF,GAdD;;AAeA,QAAMI,MAAM,GAAG,MAAOC,EAAP,IAAc;AAC3Bb,IAAAA,WAAW,CAAC,EAAE,GAAGa;AAAL,KAAD,CAAX;AACD,GAFD;;AAIAvB,EAAAA,SAAS,CAAC,MAAM;AACda,IAAAA,MAAM;AACP,GAFQ,EAEN,EAFM,CAAT;AAIA,sBACE;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACY,GADZ,eAEE;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,KAAK,EAAEJ,QAAQ,CAACE,QAFlB;AAGE,IAAA,QAAQ,EAAGa,CAAD,IAAO;AACfd,MAAAA,WAAW,CAAC,EAAE,GAAGD,QAAL;AAAeE,QAAAA,QAAQ,EAAEa,CAAC,CAACC,MAAF,CAASC;AAAlC,OAAD,CAAX;AACD,KALH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF,eAWE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACY,GADZ,eAEE;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,KAAK,EAAEjB,QAAQ,CAACG,QAFlB;AAGE,IAAA,QAAQ,EAAGY,CAAD,IAAO;AACfd,MAAAA,WAAW,CAAC,EAAE,GAAGD,QAAL;AAAeG,QAAAA,QAAQ,EAAEY,CAAC,CAACC,MAAF,CAASC;AAAlC,OAAD,CAAX;AACD,KALH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CAXF,eAqBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,OAAO,EAAEP,IAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGV,QAAQ,CAACY,GAAT,GAAe,MAAf,GAAwB,QAD3B,CADF,CArBF,CAJF,eAgCE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAhCF,eAiCE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAjCF,eAkCE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF,CADF,CADF,eAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGd,IAAI,CAACoB,GAAL,CAAS,CAACJ,EAAD,EAAKK,KAAL,kBACR;AAAI,IAAA,GAAG,EAAEA,KAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKL,EAAE,CAACZ,QAAR,CADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKY,EAAE,CAACX,QAAR,CAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAQ,IAAA,OAAO,EAAE,MAAMU,MAAM,CAACC,EAAD,CAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAQ,IAAA,OAAO,EAAE,MAAMP,GAAG,CAACO,EAAE,CAACF,GAAJ,CAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAFF,CAHF,CADD,CADH,CARF,CAlCF,CADF;AA0DD","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { _getUserList, _delUser, _reg, _update } from \"../../util/req\";\r\n\r\nexport default function Index() {\r\n  const [list, setList] = useState([]);\r\n  const [infoForm, setInfoForm] = useState({\r\n    username: \"\",\r\n    password: \"\",\r\n  });\r\n\r\n  const gelist = async () => {\r\n    var res = await _getUserList();\r\n    setList(res.data);\r\n  };\r\n  const del = async (id) => {\r\n    await _delUser(id);\r\n    alert(\"OK Deleted\");\r\n    gelist();\r\n  };\r\n  const save = async () => {\r\n    if (infoForm.username.length>=4 && infoForm.password.length>=4 && infoForm.username.length <=20 && infoForm.password.length <=20) {\r\n      if (infoForm._id) {\r\n        await _update(infoForm);\r\n      } else {\r\n        await _reg(infoForm);\r\n      }\r\n      alert(\"OK Saved/Created\", res.data);\r\n      gelist();\r\n      setInfoForm({ username: \"\", password: \"\" });\r\n    } else {\r\n      alert(\"The username and password should have 4-20 characters.\");\r\n    }\r\n    \r\n  };\r\n  const update = async (it) => {\r\n    setInfoForm({ ...it });\r\n  };\r\n\r\n  useEffect(() => {\r\n    gelist();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"info-center\">\r\n      <br />\r\n      <br />\r\n\r\n      <form>\r\n        <p>\r\n          username:{\" \"}\r\n          <input\r\n            type=\"text\"\r\n            value={infoForm.username}\r\n            onChange={(e) => {\r\n              setInfoForm({ ...infoForm, username: e.target.value });\r\n            }}\r\n          />\r\n        </p>\r\n        <p>\r\n          password:{\" \"}\r\n          <input\r\n            type=\"text\"\r\n            value={infoForm.password}\r\n            onChange={(e) => {\r\n              setInfoForm({ ...infoForm, password: e.target.value });\r\n            }}\r\n          />\r\n        </p>\r\n        <p>\r\n          <button type=\"button\" onClick={save}>\r\n            {infoForm._id ? \"Save\" : \"Create\"}\r\n          </button>\r\n        </p>\r\n      </form>\r\n\r\n      <br />\r\n      <br />\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th>userName</th>\r\n            <th>password</th>\r\n            <th>action</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {list.map((it, index) => (\r\n            <tr key={index}>\r\n              <td>{it.username}</td>\r\n              <td>{it.password}</td>\r\n              <td>\r\n                <button onClick={() => update(it)}>Update</button>\r\n                <button onClick={() => del(it._id)}>Del</button>\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}