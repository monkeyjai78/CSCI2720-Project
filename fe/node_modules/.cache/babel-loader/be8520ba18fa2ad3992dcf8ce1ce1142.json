{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\express-full-4-26\\\\express-full-4-26\\\\fe\\\\src\\\\pages\\\\Hours\\\\index.jsx\";\nimport React, { useEffect, useState } from 'react';\nimport Lines from './../../component/Lines';\nimport { _getTenData } from \"../../util/req\";\nimport dayjs from \"dayjs\";\n\nfunction gettimes() {\n  var arr = [];\n\n  for (let index = 0; index < 41; index++) {\n    var hs = dayjs().subtract(15 * index, 'minute').format(\"YYYYMMDD-HHmm\");\n    arr.push(hs);\n  }\n\n  arr = arr.map(it => {\n    var hs = it.slice(0, 11);\n    var cum = it.slice(11, 13);\n    var cm = Number(cum) - Number(cum) % 15;\n    return hs + (cm < 9 ? '0' + cm : cm);\n  });\n  return arr;\n}\n\nconst flatten = (arr, depth = 1) => arr.reduce((a, v) => a.concat(depth > 1 && Array.isArray(v) ? flatten(v, depth - 1) : v), []);\n\nfunction Index({\n  center,\n  initLinekers\n}) {\n  const [info, setInfo] = useState([]);\n  useEffect(() => {\n    const getInfo = async () => {\n      var res = await _getTenData();\n      var data = fordata(res.data);\n      console.log(111, data);\n    };\n\n    getInfo();\n  }, []);\n\n  const fordata = data => {\n    var labels = data.map(it => it.updateTime);\n    var waitTimes = flatten(data.map(it => it.waitTime), 3);\n    var data = waitTimes;\n    return {\n      labels,\n      data\n    };\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"info-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }, \"aaa\", /*#__PURE__*/React.createElement(Lines, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }\n  }));\n}\n\nexport default Index;","map":{"version":3,"sources":["C:/Users/User/Desktop/express-full-4-26/express-full-4-26/fe/src/pages/Hours/index.jsx"],"names":["React","useEffect","useState","Lines","_getTenData","dayjs","gettimes","arr","index","hs","subtract","format","push","map","it","slice","cum","cm","Number","flatten","depth","reduce","a","v","concat","Array","isArray","Index","center","initLinekers","info","setInfo","getInfo","res","data","fordata","console","log","labels","updateTime","waitTimes","waitTime"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AAEA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,SAASC,WAAT,QAA4B,gBAA5B;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAIA,SAASC,QAAT,GAAoB;AAChB,MAAIC,GAAG,GAAG,EAAV;;AACA,OAAK,IAAIC,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAG,EAA5B,EAAgCA,KAAK,EAArC,EAAyC;AACrC,QAAIC,EAAE,GAAGJ,KAAK,GAAGK,QAAR,CAAiB,KAAKF,KAAtB,EAA6B,QAA7B,EAAuCG,MAAvC,CAA8C,eAA9C,CAAT;AACAJ,IAAAA,GAAG,CAACK,IAAJ,CAASH,EAAT;AACH;;AACDF,EAAAA,GAAG,GAAGA,GAAG,CAACM,GAAJ,CAAQC,EAAE,IAAI;AAChB,QAAIL,EAAE,GAAGK,EAAE,CAACC,KAAH,CAAS,CAAT,EAAY,EAAZ,CAAT;AACA,QAAIC,GAAG,GAAGF,EAAE,CAACC,KAAH,CAAS,EAAT,EAAa,EAAb,CAAV;AACA,QAAIE,EAAE,GAAGC,MAAM,CAACF,GAAD,CAAN,GAAeE,MAAM,CAACF,GAAD,CAAN,GAAc,EAAtC;AACA,WAAOP,EAAE,IAAIQ,EAAE,GAAG,CAAL,GAAS,MAAMA,EAAf,GAAoBA,EAAxB,CAAT;AACH,GALK,CAAN;AAMA,SAAOV,GAAP;AACH;;AAGD,MAAMY,OAAO,GAAG,CAACZ,GAAD,EAAMa,KAAK,GAAG,CAAd,KACZb,GAAG,CAACc,MAAJ,CAAW,CAACC,CAAD,EAAIC,CAAJ,KAAUD,CAAC,CAACE,MAAF,CAASJ,KAAK,GAAG,CAAR,IAAaK,KAAK,CAACC,OAAN,CAAcH,CAAd,CAAb,GAAgCJ,OAAO,CAACI,CAAD,EAAIH,KAAK,GAAG,CAAZ,CAAvC,GAAwDG,CAAjE,CAArB,EAA0F,EAA1F,CADJ;;AAMA,SAASI,KAAT,CAAe;AAAEC,EAAAA,MAAF;AAAUC,EAAAA;AAAV,CAAf,EAAyC;AACrC,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkB7B,QAAQ,CAAC,EAAD,CAAhC;AACAD,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAM+B,OAAO,GAAG,YAAY;AACxB,UAAIC,GAAG,GAAG,MAAM7B,WAAW,EAA3B;AAEA,UAAI8B,IAAI,GAAGC,OAAO,CAACF,GAAG,CAACC,IAAL,CAAlB;AACAE,MAAAA,OAAO,CAACC,GAAR,CAAY,GAAZ,EAAiBH,IAAjB;AAEH,KAND;;AAOAF,IAAAA,OAAO;AACV,GATQ,EASN,EATM,CAAT;;AAYA,QAAMG,OAAO,GAAID,IAAD,IAAU;AACtB,QAAII,MAAM,GAAGJ,IAAI,CAACrB,GAAL,CAASC,EAAE,IAAIA,EAAE,CAACyB,UAAlB,CAAb;AACA,QAAIC,SAAS,GAAGrB,OAAO,CAACe,IAAI,CAACrB,GAAL,CAASC,EAAE,IAAIA,EAAE,CAAC2B,QAAlB,CAAD,EAA8B,CAA9B,CAAvB;AAEA,QAAIP,IAAI,GAAGM,SAAX;AAEA,WAAO;AACHF,MAAAA,MADG;AAEHJ,MAAAA;AAFG,KAAP;AAIH,GAVD;;AAeA,sBACI;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAEI,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CADJ;AAMH;;AAED,eAAeP,KAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\r\n\r\nimport Lines from './../../component/Lines';\r\nimport { _getTenData } from \"../../util/req\";\r\nimport dayjs from \"dayjs\";\r\n\r\n\r\n\r\nfunction gettimes() {\r\n    var arr = []\r\n    for (let index = 0; index < 41; index++) {\r\n        var hs = dayjs().subtract(15 * index, 'minute').format(\"YYYYMMDD-HHmm\")\r\n        arr.push(hs)\r\n    }\r\n    arr = arr.map(it => {\r\n        var hs = it.slice(0, 11)\r\n        var cum = it.slice(11, 13)\r\n        var cm = Number(cum) - (Number(cum) % 15)\r\n        return hs + (cm < 9 ? '0' + cm : cm)\r\n    })\r\n    return arr\r\n}\r\n\r\n\r\nconst flatten = (arr, depth = 1) =>\r\n    arr.reduce((a, v) => a.concat(depth > 1 && Array.isArray(v) ? flatten(v, depth - 1) : v), []);\r\n\r\n\r\n\r\n\r\nfunction Index({ center, initLinekers }) {\r\n    const [info, setInfo] = useState([]);\r\n    useEffect(() => {\r\n        const getInfo = async () => {\r\n            var res = await _getTenData()\r\n\r\n            var data = fordata(res.data)\r\n            console.log(111, data)\r\n\r\n        };\r\n        getInfo();\r\n    }, []);\r\n\r\n\r\n    const fordata = (data) => {\r\n        var labels = data.map(it => it.updateTime)\r\n        var waitTimes = flatten(data.map(it => it.waitTime), 3)\r\n\r\n        var data = waitTimes\r\n\r\n        return {\r\n            labels,\r\n            data,\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"info-center\">\r\n            aaa\r\n            <Lines />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Index;\r\n"]},"metadata":{},"sourceType":"module"}